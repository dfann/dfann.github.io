{"version":3,"sources":["images/email.svg","images/github.svg","images/li.svg","images/pondu.png","images/pondu-small.png","images/thats-delicious.png","images/thats-delicious-small.png","images/evergreen.png","images/evergreen-small.png","images/dfann.png","images/dfann-small.png","images/David-Fann.jpeg","components/HomeSection.js","components/PortfolioSection.js","components/AboutSection.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ContactLink","href","imgSrc","altText","contactDescription","style","textDecoration","Figure","className","Image","alt","src","width","height","Caption","textAlign","HomeSection","id","Jumbotron","fluid","Container","Row","Col","xs","display","flexFlow","justifyContent","emailImg","githubImg","linkedinImg","PortfolioPiece","imgSrcLarge","pieceName","pieceDescription","srcSet","PortfolioSection","deliciousImgSmall","deliciousImg","dfannImgSmall","dfannImg","evergreenImgSmall","evergreenImg","ponduImgSmall","ponduImg","AboutSection","portraitImg","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.972884f0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/email.29b636ee.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.d2873cdd.svg\";","module.exports = __webpack_public_path__ + \"static/media/li.0bc400df.svg\";","module.exports = __webpack_public_path__ + \"static/media/pondu.15ea12cc.png\";","module.exports = __webpack_public_path__ + \"static/media/pondu-small.333477a8.png\";","module.exports = __webpack_public_path__ + \"static/media/thats-delicious.dce07831.png\";","module.exports = __webpack_public_path__ + \"static/media/thats-delicious-small.0169d864.png\";","module.exports = __webpack_public_path__ + \"static/media/evergreen.96c4b3bd.png\";","module.exports = __webpack_public_path__ + \"static/media/evergreen-small.9ca6a762.png\";","module.exports = __webpack_public_path__ + \"static/media/dfann.48455185.png\";","module.exports = __webpack_public_path__ + \"static/media/dfann-small.e3abf7d3.png\";","module.exports = __webpack_public_path__ + \"static/media/David-Fann.da7d0e29.jpeg\";","import React from 'react';\nimport emailImg from \"../images/email.svg\";\nimport githubImg from \"../images/github.svg\";\nimport linkedinImg from \"../images/li.svg\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Figure from 'react-bootstrap/Figure';\n\nconst HomeSection = () => {\n    return (\n        <section id=\"home\">\n            <Jumbotron fluid>\n                <Container fluid className=\"content home-content\">\n                    <Row>\n                        <Col xs={12}>\n                            <h1>David Fann</h1>\n                            <h2>Let's Build Something Great Together</h2>\n                            <hr />\n                        </Col>\n                    </Row>\n                    <Row className=\"social-links-row\" style={{display: \"flex\", flexFlow: \"wrap\", justifyContent: \"center\"}}>                        \n                            <ContactLink href=\"mailto:davidthomasfann@gmail.com\" imgSrc={emailImg} altText=\"...\" contactDescription=\"Email\" />\n                            <ContactLink href=\"https://github.com/dfann\" imgSrc={githubImg} altText=\"...\" contactDescription=\"Github\" />\n                            <ContactLink href=\"https://www.linkedin.com/in/dfann\" imgSrc={linkedinImg} altText=\"...\" contactDescription=\"LinkedIn\" />                        \n                    </Row>\n                </Container>\n            </Jumbotron>\n        </section>\n\n    );\n}\n\nconst ContactLink = ({ href, imgSrc, altText, contactDescription }) => {\n    return (\n        <a href={href} style={{textDecoration: \"none\"}}>\n            <Figure className=\"icon\">\n                <Figure.Image\n                    alt={altText}\n                    src={imgSrc}\n                    style={{ width: 50, height: 50 }}\n                />\n                <Figure.Caption style={{ textAlign: \"center\" }}>\n                    <p>{contactDescription}</p>\n                </Figure.Caption>\n            </Figure>      \n        </a>\n    )\n}\n\nexport default HomeSection;","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Figure from 'react-bootstrap/Figure'\nimport ponduImg from \"../images/pondu.png\"\nimport ponduImgSmall from \"../images/pondu-small.png\"\nimport deliciousImg from \"../images/thats-delicious.png\"\nimport deliciousImgSmall from \"../images/thats-delicious-small.png\"\nimport evergreenImg from \"../images/evergreen.png\"\nimport evergreenImgSmall from \"../images/evergreen-small.png\"\nimport dfannImg from \"../images/dfann.png\"\nimport dfannImgSmall from \"../images/dfann-small.png\"\n\n\nconst PortfolioSection = () => {\n    return (\n        <section id=\"portfolio\">\n            <Jumbotron>\n                <Container className=\"content portfolio-content\">\n                    <Row style={{ textAlign: \"center\" }}>\n                        <h1>Portfolio</h1>\n                        <h2>Below you'll find some of my recent work</h2>\n                    </Row>\n                    <Row style={{ display: \"flex\", flexFlow: \"wrap\", justifyContent: \"center\" }}>                        \n                    <Col xs={4} style={{width:\"514px\"}}>\n                            <PortfolioPiece\n                                \n                                href={\"https://thats-delicious-playground.herokuapp.com/\"}\n                                imgSrc={deliciousImgSmall}\n                                imgSrcLarge={deliciousImg}\n                                altText={\"...\"}\n                                pieceName={\"That's Deliciousu\"}\n                                pieceDescription={\"Restaurant review site made with Node.JS and Bootstrap\"}\n                            />\n                        </Col>\n                        <Col xs={4} style={{width:\"514px\"}}>\n                            <PortfolioPiece\n                                href={\"/\"}\n                                imgSrc={dfannImgSmall}\n                                imgSrcLarge={dfannImg}\n                                altText={\"...\"}\n                                pieceName={\"Portfolio\"}\n                                pieceDescription={\"Website to show off projects made using React\"}\n                            />\n                        </Col>\n                        <Col xs={4} style={{width:\"514px\"}}>\n                            <PortfolioPiece\n                                href={\"https://github.com/dfann/evergreen_io\"}\n                                imgSrc={evergreenImgSmall}\n                                imgSrcLarge={evergreenImg}\n                                altText={\"...\"}\n                                pieceName={\"Evergreen\"}\n                                pieceDescription={\"Site to create flashcards made using React and Node.js\"}\n                            />\n                        </Col>\n                        <Col xs={4} style={{width:\"514px\"}}>\n                            <PortfolioPiece\n                                href={\"https://github.com/dfann/pondu.github.io\"}                                \n                                imgSrc={ponduImgSmall}\n                                imgSrcLarge={ponduImg}\n                                altText={\"...\"}\n                                pieceName={\"Pondu\"}\n                                pieceDescription={\"Site I made for a start up built from a given wireframe.\"}\n                            />\n                        </Col>\n                    </Row>\n                </Container>\n            </Jumbotron>\n        </section>\n    );\n}\n\nconst PortfolioPiece = ({ href, imgSrc, imgSrcLarge, altText, pieceName, pieceDescription }) => {\n    return (\n        <a href={href} style={{ textDecoration: \"none\" }}>\n            <Figure>\n                <Figure.Image\n                    alt={altText}\n                    src={imgSrc}\n                    srcSet={`${imgSrc} 400px, ${imgSrcLarge} 900px`}\n                />\n                <Figure.Caption style={{ textAlign: \"center\" }}>\n                    <h3>{pieceName}</h3>\n                    <p>{pieceDescription}</p>\n                </Figure.Caption>\n            </Figure>\n        </a>\n    );\n}\n\nexport default PortfolioSection;","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport portraitImg from '../images/David-Fann.jpeg'\nimport Figure from 'react-bootstrap/Figure';\n\nconst AboutSection = () => {\n    return (\n        <section id=\"about\">\n            <Jumbotron>\n                <Container className=\"content about-content\">\n                    <Row>\n                        <Figure>\n                            <Figure.Caption style={{ textAlign: \"center\" }}>\n                                <h2>Hi! I'm a Full Stack Web Developer that specializes in creating web based applications in Python, Node.JS, and React.</h2>\n                            </Figure.Caption>\n                            <Figure.Image alt=\"...\" src={portraitImg} style={{width: 375, height: 500}} />\n                        </Figure>\n                    </Row>\n                </Container>\n            </Jumbotron>\n\n        </section>\n    );\n}\n\nexport default AboutSection;","import React from 'react';\nimport HomeSection from \"./components/HomeSection\";\nimport PortfolioSection from \"./components/PortfolioSection\";\nimport AboutSection from \"./components/AboutSection\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HomeSection />\n      <PortfolioSection />\n      <AboutSection />\n      <footer>\n        <p>Copyright &copy; David Fann Web Design Studio 2020 All Rights Reserved</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}